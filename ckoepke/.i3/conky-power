#!/usr/bin/env python3


GOOD_COLOR = "#00ff00"
WARN_COLOR = "#ffff00"
DANGER_COLOR = "#ff0000"

# bat power
BATT_SYM = '⚡'
# ac power
AC_SYM = '⏚'
# unknown
UNKNOWN_SYM = '∅'

CRITICAL_BATTERY_PERC= 10
BATTERY_PATH = '/sys/class/power_supply/BAT0'
BATTERY_FULL = '%s/energy_full' % BATTERY_PATH
BATTERY_NOW = '%s/energy_now' % BATTERY_PATH
AC_STATUS = '/sys/class/power_supply/AC/online'


def state_info(state_file):
    with open(state_file, 'r') as state:
        stinfo= state.read(256)
    return int(stinfo.strip())


def battery_perc():
	full = state_info(BATTERY_FULL)
	now = state_info(BATTERY_NOW)
	return int(now/float(full)*100)

def on_ac():
	return bool(state_info(AC_STATUS))


def get_config():
	batt_perc = battery_perc()
	ac_status = on_ac()
	if ac_status:
		if batt_perc >= 100:
			# Full and on AC
			return (BATT_SYM, batt_perc, GOOD_COLOR)
		else:
			# Charging
			return (AC_SYM, batt_perc, WARN_COLOR)
	elif not ac_status:
		if batt_perc <= CRITICAL_BATTERY_PERC:
			return (BATT_SYM, batt_perc, DANGER_COLOR)
		else:
			return (BATT_SYM, batt_perc, GOOD_COLOR)
	# unknown state
	return (UNKNOWN_SYM, batt_perc, DANGER_COLOR)

print('{ \"full_text\" : \"%s:%3d\" , \"color\" : \"%s\" },' % get_config())
